{"ast":null,"code":"import { Market, MARKETS, Orderbook } from \"@project-serum/serum\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { MintParser, cache } from \"./../../contexts/accounts\";\nexport const OrderBookParser = (id, acc) => {\n  const decoded = Orderbook.LAYOUT.decode(acc.data);\n  const details = {\n    pubkey: id,\n    account: { ...acc\n    },\n    info: decoded\n  };\n  return details;\n};\nconst DEFAULT_DEX_ID = new PublicKey(\"EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o\");\nexport const DexMarketParser = (pubkey, acc) => {\n  const market = MARKETS.find(m => m.address.equals(pubkey));\n  const decoded = Market.getLayout((market === null || market === void 0 ? void 0 : market.programId) || DEFAULT_DEX_ID).decode(acc.data);\n  const details = {\n    pubkey,\n    account: { ...acc\n    },\n    info: decoded\n  };\n  cache.registerParser(details.info.baseMint, MintParser);\n  cache.registerParser(details.info.quoteMint, MintParser);\n  cache.registerParser(details.info.bids, OrderBookParser);\n  cache.registerParser(details.info.asks, OrderBookParser);\n  return details;\n};","map":{"version":3,"sources":["/home/ankit/solana/dapp-scaffold/src/models/dex/market.ts"],"names":["Market","MARKETS","Orderbook","PublicKey","MintParser","cache","OrderBookParser","id","acc","decoded","LAYOUT","decode","data","details","pubkey","account","info","DEFAULT_DEX_ID","DexMarketParser","market","find","m","address","equals","getLayout","programId","registerParser","baseMint","quoteMint","bids","asks"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,SAA1B,QAA2C,sBAA3C;AACA,SAAsBC,SAAtB,QAAuC,iBAAvC;AACA,SACEC,UADF,EAGEC,KAHF,QAIO,2BAJP;AAMA,OAAO,MAAMC,eAAe,GAAG,CAACC,EAAD,EAAgBC,GAAhB,KAA6C;AAC1E,QAAMC,OAAO,GAAGP,SAAS,CAACQ,MAAV,CAAiBC,MAAjB,CAAwBH,GAAG,CAACI,IAA5B,CAAhB;AAEA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAEP,EADM;AAEdQ,IAAAA,OAAO,EAAE,EACP,GAAGP;AADI,KAFK;AAKdQ,IAAAA,IAAI,EAAEP;AALQ,GAAhB;AAQA,SAAOI,OAAP;AACD,CAZM;AAcP,MAAMI,cAAc,GAAG,IAAId,SAAJ,CACrB,8CADqB,CAAvB;AAIA,OAAO,MAAMe,eAAe,GAAG,CAC7BJ,MAD6B,EAE7BN,GAF6B,KAG1B;AACH,QAAMW,MAAM,GAAGlB,OAAO,CAACmB,IAAR,CAAcC,CAAD,IAAOA,CAAC,CAACC,OAAF,CAAUC,MAAV,CAAiBT,MAAjB,CAApB,CAAf;AACA,QAAML,OAAO,GAAGT,MAAM,CAACwB,SAAP,CAAiB,CAAAL,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEM,SAAR,KAAqBR,cAAtC,EAAsDN,MAAtD,CACdH,GAAG,CAACI,IADU,CAAhB;AAIA,QAAMC,OAAO,GAAG;AACdC,IAAAA,MADc;AAEdC,IAAAA,OAAO,EAAE,EACP,GAAGP;AADI,KAFK;AAKdQ,IAAAA,IAAI,EAAEP;AALQ,GAAhB;AAQAJ,EAAAA,KAAK,CAACqB,cAAN,CAAqBb,OAAO,CAACG,IAAR,CAAaW,QAAlC,EAA4CvB,UAA5C;AACAC,EAAAA,KAAK,CAACqB,cAAN,CAAqBb,OAAO,CAACG,IAAR,CAAaY,SAAlC,EAA6CxB,UAA7C;AACAC,EAAAA,KAAK,CAACqB,cAAN,CAAqBb,OAAO,CAACG,IAAR,CAAaa,IAAlC,EAAwCvB,eAAxC;AACAD,EAAAA,KAAK,CAACqB,cAAN,CAAqBb,OAAO,CAACG,IAAR,CAAac,IAAlC,EAAwCxB,eAAxC;AAEA,SAAOO,OAAP;AACD,CAvBM","sourcesContent":["import { Market, MARKETS, Orderbook } from \"@project-serum/serum\";\nimport { AccountInfo, PublicKey } from \"@solana/web3.js\";\nimport {\n  MintParser,\n  ParsedAccountBase,\n  cache,\n} from \"./../../contexts/accounts\";\n\nexport const OrderBookParser = (id: PublicKey, acc: AccountInfo<Buffer>) => {\n  const decoded = Orderbook.LAYOUT.decode(acc.data);\n\n  const details = {\n    pubkey: id,\n    account: {\n      ...acc,\n    },\n    info: decoded,\n  } as ParsedAccountBase;\n\n  return details;\n};\n\nconst DEFAULT_DEX_ID = new PublicKey(\n  \"EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o\"\n);\n\nexport const DexMarketParser = (\n  pubkey: PublicKey,\n  acc: AccountInfo<Buffer>\n) => {\n  const market = MARKETS.find((m) => m.address.equals(pubkey));\n  const decoded = Market.getLayout(market?.programId || DEFAULT_DEX_ID).decode(\n    acc.data\n  );\n\n  const details = {\n    pubkey,\n    account: {\n      ...acc,\n    },\n    info: decoded,\n  } as ParsedAccountBase;\n\n  cache.registerParser(details.info.baseMint, MintParser);\n  cache.registerParser(details.info.quoteMint, MintParser);\n  cache.registerParser(details.info.bids, OrderBookParser);\n  cache.registerParser(details.info.asks, OrderBookParser);\n\n  return details;\n};\n"]},"metadata":{},"sourceType":"module"}