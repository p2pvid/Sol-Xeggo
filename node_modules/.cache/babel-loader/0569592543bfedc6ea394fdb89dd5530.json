{"ast":null,"code":"var _jsxFileName = \"/home/ankit/solana/dapp-scaffold/src/views/home/index.tsx\";\nimport { Button, Col, Row } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ConnectButton } from \"../../components/ConnectButton\";\nimport { TokenIcon } from \"../../components/TokenIcon\";\nimport { useConnectionConfig } from \"../../contexts/connection\";\nimport { useMarkets } from \"../../contexts/market\";\nimport { useUserBalance, useUserTotalBalance } from \"../../hooks\";\nimport { WRAPPED_SOL_MINT } from \"../../utils/ids\";\nimport { formatUSD } from \"../../utils/utils\";\nexport const HomeView = () => {\n  const {\n    marketEmitter,\n    midPriceInUSD\n  } = useMarkets();\n  const {\n    tokenMap\n  } = useConnectionConfig();\n  const SRM_ADDRESS = 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt';\n  const SRM = useUserBalance(SRM_ADDRESS);\n  const SOL = useUserBalance(WRAPPED_SOL_MINT);\n  const {\n    balanceInUSD: totalBalanceInUSD\n  } = useUserTotalBalance();\n  useEffect(() => {\n    const refreshTotal = () => {};\n\n    const dispose = marketEmitter.onMarket(() => {\n      refreshTotal();\n    });\n    refreshTotal();\n    return () => {\n      dispose();\n    };\n  }, [marketEmitter, midPriceInUSD, tokenMap]);\n  return /*#__PURE__*/React.createElement(Row, {\n    gutter: [16, 16],\n    align: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Your balances (\", formatUSD.format(totalBalanceInUSD), \"):\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"SOL: \", SOL.balance, \" (\", formatUSD.format(SOL.balanceInUSD), \")\"), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TokenIcon, {\n    mintAddress: SRM_ADDRESS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), \" SRM: \", SRM === null || SRM === void 0 ? void 0 : SRM.balance, \" (\", formatUSD.format(SRM === null || SRM === void 0 ? void 0 : SRM.balanceInUSD), \")\")), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ConnectButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/faucet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Faucet\"))), /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"builton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/ankit/solana/dapp-scaffold/src/views/home/index.tsx"],"names":["Button","Col","Row","React","useEffect","Link","ConnectButton","TokenIcon","useConnectionConfig","useMarkets","useUserBalance","useUserTotalBalance","WRAPPED_SOL_MINT","formatUSD","HomeView","marketEmitter","midPriceInUSD","tokenMap","SRM_ADDRESS","SRM","SOL","balanceInUSD","totalBalanceInUSD","refreshTotal","dispose","onMarket","format","balance","display","alignItems"],"mappings":"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","sourcesContent":["import { Button, Col, Row } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ConnectButton } from \"../../components/ConnectButton\";\nimport { TokenIcon } from \"../../components/TokenIcon\";\nimport { useConnectionConfig } from \"../../contexts/connection\";\nimport { useMarkets } from \"../../contexts/market\";\nimport { useUserBalance, useUserTotalBalance } from \"../../hooks\";\nimport { WRAPPED_SOL_MINT } from \"../../utils/ids\";\nimport { formatUSD } from \"../../utils/utils\";\n\nexport const HomeView = () => {\n  const { marketEmitter, midPriceInUSD } = useMarkets();\n  const { tokenMap } = useConnectionConfig();\n  const SRM_ADDRESS = 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt';\n  const SRM = useUserBalance(SRM_ADDRESS);\n  const SOL = useUserBalance(WRAPPED_SOL_MINT);\n  const { balanceInUSD: totalBalanceInUSD } = useUserTotalBalance();\n\n  useEffect(() => {\n    const refreshTotal = () => {};\n\n    const dispose = marketEmitter.onMarket(() => {\n      refreshTotal();\n    });\n\n    refreshTotal();\n\n    return () => {\n      dispose();\n    };\n  }, [marketEmitter, midPriceInUSD, tokenMap]);\n\n  return (\n    <Row gutter={[16, 16]} align=\"middle\">\n      <Col span={24}>\n        <h2>Your balances ({formatUSD.format(totalBalanceInUSD)}):</h2>\n        <h2>SOL: {SOL.balance} ({formatUSD.format(SOL.balanceInUSD)})</h2>\n        <h2 style={{ display: 'inline-flex', alignItems: 'center' }}>\n          <TokenIcon mintAddress={SRM_ADDRESS} /> SRM: {SRM?.balance} ({formatUSD.format(SRM?.balanceInUSD)})\n        </h2>\n      </Col>\n\n      <Col span={12}>\n        <ConnectButton />\n      </Col>\n      <Col span={12}>\n        <Link to=\"/faucet\">\n          <Button>Faucet</Button>\n        </Link>\n      </Col>\n      <Col span={24}>\n        <div className=\"builton\" />\n      </Col>\n    </Row>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}