{"ast":null,"code":"import EventEmitter from \"eventemitter3\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { notify } from \"../../utils/notifications\";\nexport class SolongWalletAdapter extends EventEmitter {\n  constructor() {\n    super();\n    this._publicKey = void 0;\n    this._onProcess = void 0;\n    this._publicKey = null;\n    this._onProcess = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  async signTransaction(transaction) {\n    return window.solong.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if (window.solong === undefined) {\n      notify({\n        message: \"Solong Error\",\n        description: \"Please install solong wallet from Chrome \"\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    window.solong.selectAccount().then(account => {\n      this._publicKey = new PublicKey(account);\n      this.emit(\"connect\", this._publicKey);\n    }).catch(() => {\n      this.disconnect();\n    }).finally(() => {\n      this._onProcess = false;\n    });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit(\"disconnect\");\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/ankit/solana/dapp-scaffold/src/wallet-adapters/solong/index.tsx"],"names":["EventEmitter","PublicKey","notify","SolongWalletAdapter","constructor","_publicKey","_onProcess","connect","bind","publicKey","signTransaction","transaction","window","solong","undefined","message","description","selectAccount","then","account","emit","catch","disconnect","finally"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB;AACA,SAASC,SAAT,QAAuC,iBAAvC;AAEA,SAASC,MAAT,QAAuB,2BAAvB;AAEA,OAAO,MAAMC,mBAAN,SAAkCH,YAAlC,CAAwE;AAG7EI,EAAAA,WAAW,GAAG;AACZ;AADY,SAFdC,UAEc;AAAA,SADdC,UACc;AAEZ,SAAKD,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAED,MAAIC,SAAJ,GAAgB;AACd,WAAO,KAAKJ,UAAZ;AACD;;AAED,QAAMK,eAAN,CAAsBC,WAAtB,EAAgD;AAC9C,WAAQC,MAAD,CAAgBC,MAAhB,CAAuBH,eAAvB,CAAuCC,WAAvC,CAAP;AACD;;AAEDJ,EAAAA,OAAO,GAAG;AACR,QAAI,KAAKD,UAAT,EAAqB;AACnB;AACD;;AAED,QAAKM,MAAD,CAAgBC,MAAhB,KAA2BC,SAA/B,EAA0C;AACxCZ,MAAAA,MAAM,CAAC;AACLa,QAAAA,OAAO,EAAE,cADJ;AAELC,QAAAA,WAAW,EAAE;AAFR,OAAD,CAAN;AAIA;AACD;;AAED,SAAKV,UAAL,GAAkB,IAAlB;AACCM,IAAAA,MAAD,CAAgBC,MAAhB,CACGI,aADH,GAEGC,IAFH,CAESC,OAAD,IAAkB;AACtB,WAAKd,UAAL,GAAkB,IAAIJ,SAAJ,CAAckB,OAAd,CAAlB;AACA,WAAKC,IAAL,CAAU,SAAV,EAAqB,KAAKf,UAA1B;AACD,KALH,EAMGgB,KANH,CAMS,MAAM;AACX,WAAKC,UAAL;AACD,KARH,EASGC,OATH,CASW,MAAM;AACb,WAAKjB,UAAL,GAAkB,KAAlB;AACD,KAXH;AAYD;;AAEDgB,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKjB,UAAT,EAAqB;AACnB,WAAKA,UAAL,GAAkB,IAAlB;AACA,WAAKe,IAAL,CAAU,YAAV;AACD;AACF;;AAnD4E","sourcesContent":["import EventEmitter from \"eventemitter3\";\nimport { PublicKey, Transaction } from \"@solana/web3.js\";\nimport { WalletAdapter } from \"../../contexts/wallet\";\nimport { notify } from \"../../utils/notifications\";\n\nexport class SolongWalletAdapter extends EventEmitter implements WalletAdapter {\n  _publicKey: PublicKey | null;\n  _onProcess: boolean;\n  constructor() {\n    super();\n    this._publicKey = null;\n    this._onProcess = false;\n    this.connect = this.connect.bind(this);\n  }\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    return (window as any).solong.signTransaction(transaction);\n  }\n\n  connect() {\n    if (this._onProcess) {\n      return;\n    }\n\n    if ((window as any).solong === undefined) {\n      notify({\n        message: \"Solong Error\",\n        description: \"Please install solong wallet from Chrome \",\n      });\n      return;\n    }\n\n    this._onProcess = true;\n    (window as any).solong\n      .selectAccount()\n      .then((account: any) => {\n        this._publicKey = new PublicKey(account);\n        this.emit(\"connect\", this._publicKey);\n      })\n      .catch(() => {\n        this.disconnect();\n      })\n      .finally(() => {\n        this._onProcess = false;\n      });\n  }\n\n  disconnect() {\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit(\"disconnect\");\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}