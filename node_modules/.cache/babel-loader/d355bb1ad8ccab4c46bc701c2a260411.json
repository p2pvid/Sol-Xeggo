{"ast":null,"code":"var _jsxFileName = \"/home/ankit/solana/dapp-scaffold/src/components/TokenIcon/index.tsx\";\nimport { Identicon } from \"../Identicon\";\nimport React from \"react\";\nimport { getTokenIcon } from \"../../utils/utils\";\nimport { useConnectionConfig } from \"../../contexts/connection\";\nexport const TokenIcon = props => {\n  const {\n    tokenMap\n  } = useConnectionConfig();\n  const icon = getTokenIcon(tokenMap, props.mintAddress);\n  const size = props.size || 20;\n\n  if (icon) {\n    var _props$style, _props$style2;\n\n    return /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Token icon\",\n      className: props.className,\n      key: icon,\n      width: ((_props$style = props.style) === null || _props$style === void 0 ? void 0 : _props$style.width) || size.toString(),\n      height: ((_props$style2 = props.style) === null || _props$style2 === void 0 ? void 0 : _props$style2.height) || size.toString(),\n      src: icon,\n      style: {\n        marginRight: \"0.5rem\",\n        marginTop: \"0.11rem\",\n        borderRadius: \"10rem\",\n        backgroundColor: \"white\",\n        backgroundClip: \"padding-box\",\n        ...props.style\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Identicon, {\n    address: props.mintAddress,\n    style: {\n      marginRight: \"0.5rem\",\n      width: size,\n      height: size,\n      marginTop: 2,\n      ...props.style\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n};\nexport const PoolIcon = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TokenIcon, {\n    mintAddress: props.mintA,\n    style: {\n      marginRight: \"-0.5rem\",\n      ...props.style\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TokenIcon, {\n    mintAddress: props.mintB,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/ankit/solana/dapp-scaffold/src/components/TokenIcon/index.tsx"],"names":["Identicon","React","getTokenIcon","useConnectionConfig","TokenIcon","props","tokenMap","icon","mintAddress","size","className","style","width","toString","height","marginRight","marginTop","borderRadius","backgroundColor","backgroundClip","PoolIcon","display","mintA","mintB"],"mappings":";AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,mBAAT,QAAoC,2BAApC;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAKnB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAeH,mBAAmB,EAAxC;AACA,QAAMI,IAAI,GAAGL,YAAY,CAACI,QAAD,EAAWD,KAAK,CAACG,WAAjB,CAAzB;AAEA,QAAMC,IAAI,GAAGJ,KAAK,CAACI,IAAN,IAAc,EAA3B;;AAEA,MAAIF,IAAJ,EAAU;AAAA;;AACR,wBACE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,SAAS,EAAEF,KAAK,CAACK,SAFnB;AAGE,MAAA,GAAG,EAAEH,IAHP;AAIE,MAAA,KAAK,EAAE,iBAAAF,KAAK,CAACM,KAAN,8DAAaC,KAAb,KAAsBH,IAAI,CAACI,QAAL,EAJ/B;AAKE,MAAA,MAAM,EAAE,kBAAAR,KAAK,CAACM,KAAN,gEAAaG,MAAb,KAAuBL,IAAI,CAACI,QAAL,EALjC;AAME,MAAA,GAAG,EAAEN,IANP;AAOE,MAAA,KAAK,EAAE;AACLQ,QAAAA,WAAW,EAAE,QADR;AAELC,QAAAA,SAAS,EAAE,SAFN;AAGLC,QAAAA,YAAY,EAAE,OAHT;AAILC,QAAAA,eAAe,EAAE,OAJZ;AAKLC,QAAAA,cAAc,EAAE,aALX;AAML,WAAGd,KAAK,CAACM;AANJ,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAkBD;;AAED,sBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEN,KAAK,CAACG,WADjB;AAEE,IAAA,KAAK,EAAE;AACLO,MAAAA,WAAW,EAAE,QADR;AAELH,MAAAA,KAAK,EAAEH,IAFF;AAGLK,MAAAA,MAAM,EAAEL,IAHH;AAILO,MAAAA,SAAS,EAAE,CAJN;AAKL,SAAGX,KAAK,CAACM;AALJ,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD,CA5CM;AA8CP,OAAO,MAAMS,QAAQ,GAAIf,KAAD,IAKlB;AACJ,sBACE;AAAK,IAAA,SAAS,EAAEA,KAAK,CAACK,SAAtB;AAAiC,IAAA,KAAK,EAAE;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,WAAW,EAAEhB,KAAK,CAACiB,KADrB;AAEE,IAAA,KAAK,EAAE;AAAEP,MAAAA,WAAW,EAAE,SAAf;AAA0B,SAAGV,KAAK,CAACM;AAAnC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEN,KAAK,CAACkB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAfM","sourcesContent":["import { Identicon } from \"../Identicon\";\nimport React from \"react\";\nimport { getTokenIcon } from \"../../utils/utils\";\nimport { useConnectionConfig } from \"../../contexts/connection\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nexport const TokenIcon = (props: {\n  mintAddress?: string | PublicKey;\n  style?: React.CSSProperties;\n  size?: number;\n  className?: string;\n}) => {\n  const { tokenMap } = useConnectionConfig();\n  const icon = getTokenIcon(tokenMap, props.mintAddress);\n\n  const size = props.size || 20;\n\n  if (icon) {\n    return (\n      <img\n        alt=\"Token icon\"\n        className={props.className}\n        key={icon}\n        width={props.style?.width || size.toString()}\n        height={props.style?.height || size.toString()}\n        src={icon}\n        style={{\n          marginRight: \"0.5rem\",\n          marginTop: \"0.11rem\",\n          borderRadius: \"10rem\",\n          backgroundColor: \"white\",\n          backgroundClip: \"padding-box\",\n          ...props.style,\n        }}\n      />\n    );\n  }\n\n  return (\n    <Identicon\n      address={props.mintAddress}\n      style={{\n        marginRight: \"0.5rem\",\n        width: size,\n        height: size,\n        marginTop: 2,\n        ...props.style,\n      }}\n    />\n  );\n};\n\nexport const PoolIcon = (props: {\n  mintA: string;\n  mintB: string;\n  style?: React.CSSProperties;\n  className?: string;\n}) => {\n  return (\n    <div className={props.className} style={{ display: \"flex\" }}>\n      <TokenIcon\n        mintAddress={props.mintA}\n        style={{ marginRight: \"-0.5rem\", ...props.style }}\n      />\n      <TokenIcon mintAddress={props.mintB} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}